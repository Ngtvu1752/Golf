#include<bits/stdc++.h>
#include<SDL.h>
#include<SDL_image.h>

#include "graphic.h"
using namespace std;

//void logErrorAndExit(const char*msg, const char* error)
//{
//    SDL_LogMessage(SDL_LOG_CATEGORY_APPLICATION, SDL_LOG_PRIORITY_ERROR, "%s: %s", msg, error);
//    SDL_Quit();
//}

Graphic window(WIDTH, HEIGHT, Window_Title);
Vector2f pos(1,2);
Entity Ball(pos, )
void keyPress()
{
    SDL_Event e;
    while(true)
    {
        while(SDL_PollEvent(&e))
        {
            int x, y;
            SDL_GetMouseState(&x,&y);
            cout<<x<<' '<<y<<'\n';
            if(e.type == SDL_QUIT)
                return;
            SDL_Delay(100);
        }

    }
}
Uint64 curTick = SDL_GetPerformanceCounter();
Uint64 lastTick = 0;
double deltaTime = 0;
int main( int argc, char* args[])
{
    SDL_Texture* bg = window.loadingTexture("Depres.jpg");
    window.renderTexture(200, 200, bg);
    window.display();
    keyPress();
//    SDL_Event e;
//    while(true)
//    {
//        lastTick = curTick;
//        curTick = SDL_GetPerformanceCounter();
//        deltaTime = double((curTick - lastTick)*1000/(double)(SDL_GetPerformanceFrequency()));
//        while(SDL_PollEvent(&e))
//        {
//            if(e.type == SDL_QUIT || (e.type == SDL_KEYDOWN && e.key.keysym.sym == SDLK_ESCAPE))
//            {
//                return 0;
//                SDL_Delay(100);
//            }
//            if(e.type == SDL_MOUSEBUTTONDOWN)
//            {
//                if(e.button.button == SDL_BUTTON_LEFT)
//                {
//
//                }
//                SDL_RenderClear(graphic.renderer);
//
//                SDL_RenderPresent(graphic.renderer);
//            }
//            if(e.type == SDL_MOUSEBUTTONUP)
//            {
//                if(e.button.button == SDL_BUTTON_LEFT)
//                {
//
//                }
//            }
//        }
//    }
    SDL_DestroyTexture(bg);
    bg = NULL;
    window.quitSDL();
    return 0;
}
